/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package in.abhisheklive.emp.gui;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Abhishek Live
 */
public class Emp01 extends javax.swing.JFrame {

    private Connection conn ; 
    private PreparedStatement ps ;    
     
    public Emp01() {
        initComponents();
        connectDB();
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MyPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblEmpId = new javax.swing.JLabel();
        lbiEmpName = new javax.swing.JLabel();
        lblEmpSal = new javax.swing.JLabel();
        txtEmpId = new javax.swing.JTextField();
        txtEmpName = new javax.swing.JTextField();
        txtEmpSal = new javax.swing.JTextField();
        btnAddRec = new javax.swing.JButton();
        btnShowRec = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaResult = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Employee UI with Database conn. App");

        lblEmpId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblEmpId.setText("Emp Id");

        lbiEmpName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbiEmpName.setText("EName");

        lblEmpSal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblEmpSal.setText("ESal");

        txtEmpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpNameActionPerformed(evt);
            }
        });

        txtEmpSal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpSalActionPerformed(evt);
            }
        });

        btnAddRec.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddRec.setText("Add Rec.");
        btnAddRec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRecActionPerformed(evt);
            }
        });

        btnShowRec.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnShowRec.setText("Show Rec.");
        btnShowRec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowRecActionPerformed(evt);
            }
        });

        txtAreaResult.setColumns(20);
        txtAreaResult.setRows(5);
        jScrollPane1.setViewportView(txtAreaResult);

        javax.swing.GroupLayout MyPanelLayout = new javax.swing.GroupLayout(MyPanel);
        MyPanel.setLayout(MyPanelLayout);
        MyPanelLayout.setHorizontalGroup(
            MyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MyPanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(MyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MyPanelLayout.createSequentialGroup()
                        .addComponent(btnAddRec)
                        .addGap(74, 74, 74)
                        .addComponent(btnShowRec)
                        .addGap(89, 89, 89))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MyPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(64, 64, 64))))
            .addGroup(MyPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(MyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(MyPanelLayout.createSequentialGroup()
                        .addGroup(MyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(MyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblEmpSal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblEmpId, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                            .addComponent(lbiEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(MyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmpId, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(txtEmpName)
                            .addComponent(txtEmpSal))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        MyPanelLayout.setVerticalGroup(
            MyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MyPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbiEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmpSal, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmpSal, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(MyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnShowRec)
                    .addComponent(btnAddRec))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpNameActionPerformed

    private void txtEmpSalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpSalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpSalActionPerformed

    private void btnShowRecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowRecActionPerformed
        try{
            Statement st =conn.createStatement();
            ResultSet rs= st.executeQuery("select * from guiEmp");
            StringBuffer str= new StringBuffer();
            while(rs.next()){
                int id=rs.getInt(1);
                String name =rs.getString(2);
                Double sal =rs.getDouble(3);
                str.append(id+"\t"+name+"\t"+sal+"\n"); 
                
            }
            txtAreaResult.setText(str.toString());
        }
        catch(SQLException ex1){
              System.out.println("cannot connect to the database"+ex1);
            ex1.printStackTrace();
          }
    }//GEN-LAST:event_btnShowRecActionPerformed

    private void btnAddRecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRecActionPerformed
        
        boolean result =validateInput();
        
        if(result){
          try{
            int eid= Integer.parseInt(txtEmpId.getText());
            String ename =txtEmpName.getText();
            double esal  =Double.parseDouble(txtEmpSal.getText());
            
            ps.setInt(1, eid);
            ps.setString(2, ename);
            ps.setDouble(3,esal);
            
            
            
            int updateRow = ps.executeUpdate();
            
            if(updateRow==1){
                JOptionPane.showMessageDialog(null,"Record successfully inserted ");
                txtEmpId.setText("");
                txtEmpName.setText("");
                txtEmpSal.setText("");
                txtEmpId.requestFocus();
            }
            else
                JOptionPane.showMessageDialog(null,"Record not added try aga  later ");
                
          }
          
          catch(NumberFormatException ex){
               System.out.println("please input digit for empId and empSal"+ex);
            ex.printStackTrace();
          }
          catch(SQLException ex1){
              System.out.println("cannot connect to the database"+ex1);
            ex1.printStackTrace();
          }
          
            
        }
        else
            JOptionPane.showMessageDialog(null,"pls add the Record ");
            return ;
        
    }//GEN-LAST:event_btnAddRecActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Emp01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Emp01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Emp01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Emp01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Emp01().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MyPanel;
    private javax.swing.JButton btnAddRec;
    private javax.swing.JButton btnShowRec;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbiEmpName;
    private javax.swing.JLabel lblEmpId;
    private javax.swing.JLabel lblEmpSal;
    private javax.swing.JTextArea txtAreaResult;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JTextField txtEmpName;
    private javax.swing.JTextField txtEmpSal;
    // End of variables declaration//GEN-END:variables

    private void connectDB() {
        try{
            Class.forName("oracle.jdbc.OracleDriver");
            conn =DriverManager.getConnection("jdbc:oracle:thin:@//DESKTOP-HTE0KBN/xe","abhishekdb","root");
            ps = conn.prepareStatement("insert into guiemp values(? ,? , ?)");
            JOptionPane.showMessageDialog(null,"Connect Successfully to the database");
        
        }
        catch(ClassNotFoundException ex){
            System.out.println("driver can not found"+ex);
            ex.printStackTrace();
        }
        
        catch(SQLException ex1){
            System.out.println("cannot connect to the database"+ex1);
            ex1.printStackTrace();
            
        }
    }

    private boolean validateInput() {
        if(txtEmpId.getText().isEmpty() || txtEmpName.getText().isEmpty() || txtEmpSal.getText().isEmpty())
            return false;
        else
            return true;
    }
}
